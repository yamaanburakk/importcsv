{"ast":null,"code":"var _jsxFileName = \"/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  {\n    const [csvfile, setCsvFile] = useState([]);\n\n    const parseFile = file => {\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          setCsvFile(results.data);\n        }\n      });\n    };\n\n    console.log(csvfile);\n  }\n  console.log(this.state.csvfile);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Import CSV File!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"csv-input\",\n      type: \"file\",\n      ref: input => {\n        this.filesInput = input;\n      },\n      name: \"file\",\n      placeholder: null,\n      onChange: this.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.importCSV,\n      children: \" Upload now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"SfDcTL2QQlc6WRBQICr2bRxV7Ns=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js"],"names":["React","useState","Papa","App","csvfile","setCsvFile","parseFile","file","parse","header","complete","results","data","console","log","state","input","filesInput","handleChange","importCSV"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAE;AACf,UAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,UAAMK,SAAS,GAAGC,IAAI,IAAI;AACxBL,MAAAA,IAAI,CAACM,KAAL,CAAWD,IAAX,EAAiB;AACfE,QAAAA,MAAM,EAAE,IADO;AAEfC,QAAAA,QAAQ,EAAEC,OAAO,IAAI;AACnBN,UAAAA,UAAU,CAACM,OAAO,CAACC,IAAT,CAAV;AACD;AAJc,OAAjB;AAMD,KAPD;;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACD;AAEOS,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWX,OAAvB;AAEF,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAEY,KAAK,IAAI;AACZ,aAAKC,UAAL,GAAkBD,KAAlB;AACD,OALH;AAME,MAAA,IAAI,EAAC,MANP;AAOE,MAAA,WAAW,EAAE,IAPf;AAQE,MAAA,QAAQ,EAAE,KAAKE;AARjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAQ,MAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcG;AAAA;AAAA;AAAA;AAAA,YAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAsBD;;GAtCIhB,G;;KAAAA,G;AAyCP,eAAeA,GAAf","sourcesContent":["import React,{useState} from \"react\";\nimport Papa from \"papaparse\";\n\nfunction App() { {\n  const [csvfile, setCsvFile] = useState([]);\n\n  const parseFile = file => {\n    Papa.parse(file, {\n      header: true,\n      complete: results => {\n        setCsvFile(results.data);\n      },\n    });\n  };\n  console.log(csvfile);\n}\n  \n        console.log(this.state.csvfile);\n     \n      return (\n          \n        <div className=\"App\">\n          <h2>Import CSV File!</h2>\n          <input\n            className=\"csv-input\"\n            type=\"file\"\n            ref={input => {\n              this.filesInput = input;\n            }}\n            name=\"file\"\n            placeholder={null}\n            onChange={this.handleChange}\n          />\n            \n          <button onClick={this.importCSV}> Upload now!</button>\n           <div>\n         \n            </div>\n          \n          </div>\n    );\n    }\n\n\n  export default App;"]},"metadata":{},"sourceType":"module"}