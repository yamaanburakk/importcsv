{"ast":null,"code":"var _jsxFileName = \"/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [parsedCsvData, setParsedCsvData] = useState([]);\n\n  const parseFile = file => {\n    Papa.parse(file, {\n      header: true,\n      complete: results => {\n        setParsedCsvData(results.data);\n      }\n    });\n  };\n\n  console.log(parsedCsvData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Kanji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: parsedCsvData && parsedCsvData.map((parsedData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: parsedData.Kanji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: parsedData.Reading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: parsedData.English\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SOaN1ff4MIGljtYWNi5btpd9OUg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js"],"names":["useState","useCallback","useDropzone","Papa","App","parsedCsvData","setParsedCsvData","parseFile","file","parse","header","complete","results","data","console","log","getInputProps","map","parsedData","index","Kanji","Reading","English"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMO,SAAS,GAAGC,IAAI,IAAI;AACxBL,IAAAA,IAAI,CAACM,KAAL,CAAWD,IAAX,EAAiB;AACfE,MAAAA,MAAM,EAAE,IADO;AAEfC,MAAAA,QAAQ,EAAEC,OAAO,IAAI;AACnBN,QAAAA,gBAAgB,CAACM,OAAO,CAACC,IAAT,CAAhB;AACD;AAJc,KAAjB;AAMD,GAPD;;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE,sBAAWW,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBACGX,aAAa,IACZA,aAAa,CAACY,GAAd,CAAkB,CAACC,UAAD,EAAaC,KAAb,kBAChB;AAAA,kCACE;AAAA,sBAAKD,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKF,UAAU,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,UAAU,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASH,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAzCQf,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Papa from 'papaparse';\n\nfunction App() {\n  const [parsedCsvData, setParsedCsvData] = useState([]);\n\n  const parseFile = file => {\n    Papa.parse(file, {\n      header: true,\n      complete: results => {\n        setParsedCsvData(results.data);\n      },\n    });\n  };\n\n  console.log(parsedCsvData);\n\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input {...getInputProps()} />\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Kanji</th>\n            <th>Reading</th>\n            <th>English</th>\n          </tr>\n        </thead>\n        <tbody>\n          {parsedCsvData &&\n            parsedCsvData.map((parsedData, index) => (\n              <tr key={index}>\n                <td>{parsedData.Kanji}</td>\n                <td>{parsedData.Reading}</td>\n                <td>{parsedData.English}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}