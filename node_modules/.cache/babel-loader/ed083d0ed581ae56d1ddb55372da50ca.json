{"ast":null,"code":"var _jsxFileName = \"/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CSVFileUploader extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFiles = files => {\n      // Check for the various File API support.\n      if (window.FileReader) {\n        // FileReader are supported.\n        this.getAsText(files[0]);\n      }\n    };\n  }\n\n  getAsText(fileToRead) {\n    var reader = new FileReader(); // Read file into memory as UTF-8      \n\n    reader.readAsText(fileToRead); // Handle errors load\n\n    reader.onload = this.fileReadingFinished;\n    reader.onerror = this.errorHandler;\n  }\n\n  processData(csv) {\n    var allTextLines = csv.split(/\\r\\n|\\n/);\n    var lines = allTextLines.map(data => data.split(';'));\n    console.log(lines);\n  }\n\n  fileReadingFinished(event) {\n    var csv = event.target.result;\n    processData(csv);\n  }\n\n  errorHandler(event) {\n    if (event.target.error.name === \"NotReadableError\") {\n      alert(\"Cannot read file!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onchange: this.handleFiles,\n      accept: \".csv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js"],"names":["React","CSVFileUploader","Component","handleFiles","files","window","FileReader","getAsText","fileToRead","reader","readAsText","onload","fileReadingFinished","onerror","errorHandler","processData","csv","allTextLines","split","lines","map","data","console","log","event","target","result","error","name","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAC5CC,WAD4C,GAC7BC,KAAD,IAAW;AACrB;AACA,UAAIC,MAAM,CAACC,UAAX,EAAuB;AACnB;AACA,aAAKC,SAAL,CAAeH,KAAK,CAAC,CAAD,CAApB;AACH;AACJ,KAP2C;AAAA;;AAS5CG,EAAAA,SAAS,CAACC,UAAD,EAAa;AAClB,QAAIC,MAAM,GAAG,IAAIH,UAAJ,EAAb,CADkB,CAElB;;AACAG,IAAAA,MAAM,CAACC,UAAP,CAAkBF,UAAlB,EAHkB,CAIlB;;AACAC,IAAAA,MAAM,CAACE,MAAP,GAAgB,KAAKC,mBAArB;AACAH,IAAAA,MAAM,CAACI,OAAP,GAAiB,KAAKC,YAAtB;AACH;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,QAAIC,YAAY,GAAGD,GAAG,CAACE,KAAJ,CAAU,SAAV,CAAnB;AACA,QAAIC,KAAK,GAAGF,YAAY,CAACG,GAAb,CAAiBC,IAAI,IAAIA,IAAI,CAACH,KAAL,CAAW,GAAX,CAAzB,CAAZ;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AAEDP,EAAAA,mBAAmB,CAACY,KAAD,EAAQ;AACvB,QAAIR,GAAG,GAAGQ,KAAK,CAACC,MAAN,CAAaC,MAAvB;AACAX,IAAAA,WAAW,CAACC,GAAD,CAAX;AACH;;AAEDF,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAChB,QAAIA,KAAK,CAACC,MAAN,CAAaE,KAAb,CAAmBC,IAAnB,KAA4B,kBAAhC,EAAoD;AAChDC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAG,KAAK3B,WAFpB;AAGI,MAAA,MAAM,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA5C2C","sourcesContent":["import React from 'react';\n\nclass CSVFileUploader extends React.Component {\n  handleFiles = (files) => {\n      // Check for the various File API support.\n      if (window.FileReader) {\n          // FileReader are supported.\n          this.getAsText(files[0]);\n      }\n  }\n\n  getAsText(fileToRead) {\n      var reader = new FileReader();\n      // Read file into memory as UTF-8      \n      reader.readAsText(fileToRead);\n      // Handle errors load\n      reader.onload = this.fileReadingFinished;\n      reader.onerror = this.errorHandler;\n  }\n\n  processData(csv) {\n      var allTextLines = csv.split(/\\r\\n|\\n/);\n      var lines = allTextLines.map(data => data.split(';'))\n\n      console.log(lines)\n  }\n\n  fileReadingFinished(event) {\n      var csv = event.target.result;\n      processData(csv);\n  }\n\n  errorHandler(event) {\n      if (event.target.error.name === \"NotReadableError\") {\n          alert(\"Cannot read file!\");\n      }\n  }\n\n  render() {\n      return(\n          <input \n              type=\"file\" \n              onchange={ this.handleFiles }\n              accept=\".csv\" \n          />\n      )\n  }\n}"]},"metadata":{},"sourceType":"module"}