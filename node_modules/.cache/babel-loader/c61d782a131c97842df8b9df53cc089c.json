{"ast":null,"code":"var _jsxFileName = \"/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst state = {\n  labels: ['January', 'February', 'March', 'April', 'May'],\n  datasets: [{\n    label: 'Rainfall',\n    backgroundColor: 'rgba(75,192,192,1)',\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 2,\n    data: [65, 59, 80, 81, 56]\n  }]\n};\n\nconst handleFileUpload = e => {\n  const file = e.target.files[0];\n  const reader = new FileReader();\n\n  reader.onload = evt => {\n    /* Parse data */\n    const bstr = evt.target.result;\n    const wb = XLSX.read(bstr, {\n      type: 'binary'\n    });\n    /* Get first worksheet */\n\n    const wsname = wb.SheetNames[0];\n    const ws = wb.Sheets[wsname];\n    /* Convert array of arrays */\n\n    const data = XLSX.utils.sheet_to_csv(ws, {\n      header: 1\n    });\n    processData(data);\n  };\n\n  reader.readAsBinaryString(file);\n};\n\nexport default class App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv,.xlsx,.xls\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: state,\n        options: {\n          title: {\n            display: false,\n            Text: 'Avarage payment per month',\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js"],"names":["React","Bar","XLSX","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","handleFileUpload","e","file","target","files","reader","FileReader","onload","evt","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_csv","header","processData","readAsBinaryString","App","Component","render","title","display","Text","fontSize","legend","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EACC,OADD,EACU,KADV,CADI;AAGZC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,eAAe,EAAE,oBAFnB;AAGEC,IAAAA,WAAW,EAAE,eAHf;AAIEC,IAAAA,WAAW,EAAE,CAJf;AAKEC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;AALR,GADQ;AAHE,CAAd;;AAeA,MAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC5B,QAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,EAAAA,MAAM,CAACE,MAAP,GAAiBC,GAAD,IAAS;AACvB;AACA,UAAMC,IAAI,GAAGD,GAAG,CAACL,MAAJ,CAAWO,MAAxB;AACA,UAAMC,EAAE,GAAGpB,IAAI,CAACqB,IAAL,CAAUH,IAAV,EAAgB;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAhB,CAAX;AACA;;AACA,UAAMC,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,CAAd,CAAf;AACA,UAAMC,EAAE,GAAGL,EAAE,CAACM,MAAH,CAAUH,MAAV,CAAX;AACA;;AACA,UAAMf,IAAI,GAAGR,IAAI,CAAC2B,KAAL,CAAWC,YAAX,CAAwBH,EAAxB,EAA4B;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAA5B,CAAb;AACAC,IAAAA,WAAW,CAACtB,IAAD,CAAX;AACD,GAVD;;AAWAM,EAAAA,MAAM,CAACiB,kBAAP,CAA0BpB,IAA1B;AACD,CAfD;;AAiBA,eAAe,MAAMqB,GAAN,SAAkBlC,KAAK,CAACmC,SAAxB,CAAiC;AAG9CC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,MAAM,EAAC,iBAFP;AAGA,QAAA,QAAQ,EAAEzB;AAHV;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,GAAD;AACE,QAAA,IAAI,EAAER,KADR;AAEE,QAAA,OAAO,EAAI;AACXkC,UAAAA,KAAK,EAAC;AACJC,YAAAA,OAAO,EAAC,KADJ;AAEJC,YAAAA,IAAI,EAAC,2BAFD;AAGJC,YAAAA,QAAQ,EAAC;AAHL,WADK;AAMXC,UAAAA,MAAM,EAAC;AACLH,YAAAA,OAAO,EAAC,IADH;AAELI,YAAAA,QAAQ,EAAC;AAFJ;AANI;AAFb;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA5B6C","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport XLSX from 'xlsx';\n\nconst state = {\n  labels: ['January', 'February', 'March',\n           'April', 'May'],\n  datasets: [\n    {\n      label: 'Rainfall',\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: [65, 59, 80, 81, 56]\n    }\n  ]\n}\n\n\nconst handleFileUpload = e => {\n  const file = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = (evt) => {\n    /* Parse data */\n    const bstr = evt.target.result;\n    const wb = XLSX.read(bstr, { type: 'binary' });\n    /* Get first worksheet */\n    const wsname = wb.SheetNames[0];\n    const ws = wb.Sheets[wsname];\n    /* Convert array of arrays */\n    const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n    processData(data);\n  };\n  reader.readAsBinaryString(file);\n}\n\nexport default class App extends React.Component{\n\n\n  render(){\n    return (\n      <div>\n        <input\n        type=\"file\"\n        accept=\".csv,.xlsx,.xls\"\n        onChange={handleFileUpload}\n        />\n        \n        <Bar\n          data={state}\n          options = {{\n          title:{\n            display:false,\n            Text:'Avarage payment per month',\n            fontSize:20\n          },\n          legend:{\n            display:true,\n            position:'right'\n          }\n                    }}\n        />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}