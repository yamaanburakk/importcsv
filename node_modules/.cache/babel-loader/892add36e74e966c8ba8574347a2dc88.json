{"ast":null,"code":"var _jsxFileName = \"/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileReader() {\n  _s();\n\n  const [parsedCsvData, setParsedCsvData] = useState([]);\n\n  const handleChange = event => {\n    this.setState({\n      csvfile: event.target.files[0]\n    });\n  };\n\n  const importCSV = () => {\n    const {\n      csvfile\n    } = this.state;\n    Papa.parse(csvfile, {\n      complete: this.updateData,\n      header: true\n    });\n  };\n\n  const updateData = result => {\n    var data = result.data;\n    console.log(data);\n  };\n\n  console.log(this.state.csvfile);\n  const csvfile = this.state.csvfile;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Import CSV File!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"csv-input\",\n      type: \"file\",\n      ref: input => {\n        this.filesInput = input;\n      },\n      name: \"file\",\n      placeholder: null,\n      onChange: this.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.importCSV,\n      children: \" Upload now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), csvfile && csvfile.map((parsedData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: parsedData.x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: parsedData.y\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileReader, \"SOaN1ff4MIGljtYWNi5btpd9OUg=\");\n\n_c = FileReader;\nexport default FileReader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"sources":["/home/burak/Desktop/Project/Netmera-ex-projects/chartdata/src/App.js"],"names":["React","useState","Papa","FileReader","parsedCsvData","setParsedCsvData","handleChange","event","setState","csvfile","target","files","importCSV","state","parse","complete","updateData","header","result","data","console","log","input","filesInput","map","parsedData","index","x","y"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAGA,SAASC,UAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;;AAED,QAAMK,YAAY,GAAGC,KAAK,IAAI;AAC3B,SAAKC,QAAL,CAAc;AACZC,MAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AADG,KAAd;AAGD,GAJF;;AAMC,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKI,KAAzB;AACAX,IAAAA,IAAI,CAACY,KAAL,CAAWL,OAAX,EAAoB;AAClBM,MAAAA,QAAQ,EAAE,KAAKC,UADG;AAElBC,MAAAA,MAAM,EAAE;AAFU,KAApB;AAID,GAND;;AAQA,QAAMD,UAAU,GAAIE,MAAD,IAAY;AAC7B,QAAIC,IAAI,GAAGD,MAAM,CAACC,IAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAHD;;AAMEC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWJ,OAAvB;AACA,QAAMA,OAAO,GAAG,KAAKI,KAAL,CAAWJ,OAA3B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAEa,KAAK,IAAI;AACZ,aAAKC,UAAL,GAAkBD,KAAlB;AACD,OALH;AAME,MAAA,IAAI,EAAC,MANP;AAOE,MAAA,WAAW,EAAE,IAPf;AAQE,MAAA,QAAQ,EAAE,KAAKhB;AARjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAQ,MAAA,OAAO,EAAE,KAAKM,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcGH,OAAO,IAAIA,OAAO,CAACe,GAAR,CAAY,CAACC,UAAD,EAAYC,KAAZ,kBACpB;AAAA,8BACI;AAAA,kBAAKD,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKF,UAAU,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAWF,KAAX;AAAA;AAAA;AAAA;AAAA,YADQ,CAdd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH;;GAhDMvB,U;;KAAAA,U;AAkDP,eAAeA,UAAf","sourcesContent":["import React,{useState} from \"react\";\nimport Papa from \"papaparse\";\n\n\nfunction FileReader(){\n    const [parsedCsvData, setParsedCsvData] = useState([]);\n  \n   const handleChange = event => {\n      this.setState({\n        csvfile: event.target.files[0]\n      });\n    };\n  \n    const importCSV = () => {\n      const { csvfile } = this.state;\n      Papa.parse(csvfile, {\n        complete: this.updateData,\n        header: true\n      });\n    };\n  \n    const updateData = (result) => {\n      var data = result.data;\n      console.log(data);\n    }\n  \n    \n      console.log(this.state.csvfile);\n      const csvfile = this.state.csvfile;\n      return (\n        <div className=\"App\">\n          <h2>Import CSV File!</h2>\n          <input\n            className=\"csv-input\"\n            type=\"file\"\n            ref={input => {\n              this.filesInput = input;\n            }}\n            name=\"file\"\n            placeholder={null}\n            onChange={this.handleChange}\n          />\n            \n          <button onClick={this.importCSV}> Upload now!</button>\n          {csvfile && csvfile.map((parsedData,index)=> (\n              <tr key = {index}>\n                  <td>{parsedData.x}</td>\n                  <td>{parsedData.y}</td>\n              </tr>\n          ))}\n        </div>\n      );\n  }\n  \n  export default FileReader;"]},"metadata":{},"sourceType":"module"}